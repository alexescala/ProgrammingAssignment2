library(datasets)
data(iris)
head(iris)
s<-split(iris,iris[,"Species"])
s
s<-split(iris,iris$Species)
s
lapply(s,function(x) mean(x[,"Sepal.length"]))
lapply(s,function(x) mean(x[,"Sepal.Length"]))
lapply(s,function(x) mean(x$Sepal.Length))
apply(iris[,1:4],2,mean)
apply(iris[,1:5],2,mean)
apply(iris,2,mean)
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mtcars$mpg
mtcars$cyl
split(mtcars$mpg,mtcars,$cyl)
split(mtcars$mpg,mtcars$cyl)
split(mtcars,mtcars$cyl)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
split(mtcars,mtcars$cyl)
lapply(split(mtcars,mtcars$cyl),mean)
mtcars
mtcars[|]
mtcars[1]
mean(mtcars)
mtcars[,1]
lapply(split(mtcars,mtcars$cyl),mean)
split(mtcars$hp,mtcars$cyl)
lapply(split(mtcars$hp,mtcars$cyl),mean)
l<-lapply(split(mtcars$hp,mtcars$cyl),mean)
l$4
l$`4`
abs(l$`4`,l$`8`)
?abs
abs(l$`4`-l$`8`)
debut(ls)
debug(ls)
ls
debug
str(debug)
?debug
debug(ls)
ls
ls()
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern)
{
if (!missing(name)) {
nameValue <- try(name, silent = TRUE)
if (identical(class(nameValue), "try-error")) {
name <- substitute(name)
name <- substitute(name)
name <- substitute(name)
q
q
q
name <- substitute(name)
if (!is.character(name))
name <- deparse(name)
warning(gettextf("%s converted to character string",
sQuote(name)), domain = NA)
pos <- name
}
else pos <- nameValue
}
all.names <- .Internal(ls(envir, all.names))
q
Q()
q()
if (!missing(pattern)) {
if ((ll <- length(grep("[", pattern, fixed = TRUE))) &&
ll != length(grep("]", pattern, fixed = TRUE))) {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
if (pattern == "[") {
pattern <- "\\["
warning("replaced regular expression pattern '[' by  '\\\\['")
}
else if (length(grep("[^\\\\]\\[<-", pattern))) {
pattern <- sub("\\[<-", "\\\\\\[<-", pattern)
warning("replaced '[<-' by '\\\\[<-' in regular expression pattern")
}
}
grep(pattern, all.names, value = TRUE)
}
else all.names
}
}
)
q
s
s
a<-2
Q
Q
a<-1
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
?rep
a<-rep(10,times=3)
a_vec<-makeVector(a)
cachemean(a_vec)
cachemean(a_vec)
getwd()
setwd("./R/assignments/course1w3/ProgrammingAssignment2")
?matrix
mat<-matrix(data=c(1,0,0,1),nrow=2,ncol=2)
mat
solve(mat)
mat<-matrix(data=c(1,0,0,2),nrow=2,ncol=2)
solve(mat)
mat
mat%*%solve(mat)
?solve
source('~/R/assignments/course1w3/ProgrammingAssignment2/cachematrix.R')
source('~/R/assignments/course1w3/ProgrammingAssignment2/cachematrix.R')
mat
mat_cache<-makeCacheMatrix(mat)
cacheSolve(mat_cache)
cacheSolve(mat_cache)
mat_cache$get
mat_cache$get()
mat_cache$getinverse
mat_cache$getinverse()
set.seed(1)
rpois(5, 2)
?pnorm
rnorm(4)
